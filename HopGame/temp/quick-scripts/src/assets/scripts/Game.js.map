{"version":3,"sources":["assets\\scripts\\Game.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Player from \"./Player\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Game extends cc.Component {\r\n\r\n    @property(cc.Prefab)\r\n    starPerfeb: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    ground: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    backg: cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    bg: cc.Sprite[] = [null, null];\r\n\r\n    // @property(cc.Node)\r\n    // bg2:cc.Node=null;\r\n\r\n    @property\r\n    maxStarDuration: number = 0;\r\n\r\n    @property\r\n    minStarDuration: number = 0;\r\n\r\n    @property(cc.Node)\r\n    player: cc.Node = null;\r\n    groundY: any;\r\n\r\n    @property(cc.Label)\r\n    score: cc.Label = null;\r\n    playerScore: number = 0;\r\n    timer: number;\r\n    starDuration: number;\r\n\r\n    @property(cc.AudioClip)\r\n    playScore: cc.AudioClip = null;\r\n    speed: number = 400;\r\n\r\n\r\n    gameScore() {\r\n        this.playerScore += 1;\r\n        this.score.string = 'SCORE:' + this.playerScore.toString();\r\n        cc.audioEngine.playEffect(this.playScore, false);\r\n    }\r\n\r\n    spwanNewStar() {\r\n        var newStar = cc.instantiate(this.starPerfeb);\r\n        // newStar.addComponent(cc.CircleCollider);\r\n        newStar.getComponent(cc.CircleCollider).radius = 20;\r\n        newStar.group = 'Star';\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        this.node.addChild(newStar);\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration);\r\n        this.timer = 0;\r\n    }\r\n    getNewStarPosition() {\r\n        var randX = 0;\r\n        // console.log(randY);\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // console.log(randY);\r\n        var maxX = this.node.width / 2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        return cc.v2(randX, randY);\r\n    }\r\n\r\n\r\n    //   playerBoundation(){\r\n    //   this.node.getComponent('Player')\r\n    //   }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.groundY = this.ground.y + this.ground.height / 2;\r\n        this.spwanNewStar();\r\n\r\n        // cc.director.preloadScene('menu');\r\n        this.timer = 0;\r\n        // this.starDuration = 0;\r\n        // cc.director.getPhysicsManager().enabled=true;\r\n    }\r\n    gameOver() {\r\n        this.player.stopAction;\r\n        cc.director.loadScene('gameover');\r\n\r\n\r\n    }\r\n\r\n\r\n    start() {\r\n\r\n    }\r\n    check() {\r\n\r\n        return;\r\n    }\r\n\r\n    update(dt) {\r\n        // let tp1=this.bg1.getPosition().x;\r\n\r\n        // let tp2=this.bg2.getPosition().x;\r\n\r\n        // // var maxX=dt*this.bg2.x+this.bg2.x/2;\r\n        // // let maxy=tp1.y;\r\n        // let playerpos = this.player.getPosition().x;\r\n        // // console.log('backgroung'+ maxX)\r\n\r\n        // if(playerpos >= tp2)\r\n        // // console.log('true')\r\n        // {\r\n        //     this.bg.setPosition(this.bg2.getPosition());\r\n        // this.ground.setPosition(this.bg2.getPosition().y)\r\n\r\n        // else if (this.player.getPosition().x)\r\n        // {\r\n        //     this.bg1.setPosition(this.bg.getPosition())\r\n        // }\r\n        // if(this.timer > this.starDuration){\r\n        //     // this.gameOver();\r\n        //     // console.log(this.gameOver);\r\n        //     return;\r\n        // }\r\n        // this.timer += dt;\r\n        //background\r\n        for (let i = 0; i < this.bg.length; i++) {\r\n                this.bg[i].node.x -= 1.0;\r\n            if (this.bg[i].node.x <= -960) {\r\n                this.bg[i].node.x = 960;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n}"]}